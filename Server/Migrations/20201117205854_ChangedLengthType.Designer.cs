// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketReservationSystem.Server.Context;

namespace TicketReservationSystem.Server.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201117205854_ChangedLengthType")]
    partial class ChangedLengthType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdminID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Cinema", b =>
                {
                    b.Property<int>("CinemaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CinemaID");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Hall", b =>
                {
                    b.Property<int>("HallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CinemaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("HallID");

                    b.HasIndex("CinemaID");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Released")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Subtitles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubtitlesLanguage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.MovieShow", b =>
                {
                    b.Property<int>("MovieShowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HallID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieShowID");

                    b.HasIndex("HallID");

                    b.HasIndex("MovieID");

                    b.ToTable("MovieShows");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("PaymentID");

                    b.HasIndex("ReservationID")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieShowID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationID");

                    b.HasIndex("MovieShowID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Seat", b =>
                {
                    b.Property<int>("SeatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HallID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeatReservationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeatID");

                    b.HasIndex("HallID");

                    b.HasIndex("SeatReservationID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.SeatReservation", b =>
                {
                    b.Property<int>("SeatReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShowMovieShowID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeatReservationID");

                    b.HasIndex("ReservationID");

                    b.HasIndex("ShowMovieShowID");

                    b.ToTable("ReservationSeats");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Admin", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("TicketReservationSystem.Shared.Domain.Admin", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Hall", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.Cinema", "Cinema")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaID");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.MovieShow", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.Hall", "Hall")
                        .WithMany("Shows")
                        .HasForeignKey("HallID");

                    b.HasOne("TicketReservationSystem.Shared.Domain.Movie", "Movie")
                        .WithMany("Shows")
                        .HasForeignKey("MovieID");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Payment", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("TicketReservationSystem.Shared.Domain.Payment", "ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Reservation", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.MovieShow", "MovieShow")
                        .WithMany("Reservations")
                        .HasForeignKey("MovieShowID");

                    b.Navigation("MovieShow");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Seat", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallID");

                    b.HasOne("TicketReservationSystem.Shared.Domain.SeatReservation", "SeatReservation")
                        .WithMany("Seats")
                        .HasForeignKey("SeatReservationID");

                    b.Navigation("Hall");

                    b.Navigation("SeatReservation");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.SeatReservation", b =>
                {
                    b.HasOne("TicketReservationSystem.Shared.Domain.Reservation", "Reservation")
                        .WithMany("ReservationSeats")
                        .HasForeignKey("ReservationID");

                    b.HasOne("TicketReservationSystem.Shared.Domain.MovieShow", "Show")
                        .WithMany("ReservationSeats")
                        .HasForeignKey("ShowMovieShowID");

                    b.Navigation("Reservation");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Cinema", b =>
                {
                    b.Navigation("Halls");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Hall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Shows");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Movie", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.MovieShow", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("ReservationSeats");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.Reservation", b =>
                {
                    b.Navigation("Payment");

                    b.Navigation("ReservationSeats");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.SeatReservation", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("TicketReservationSystem.Shared.Domain.User", b =>
                {
                    b.Navigation("Admin");
                });
#pragma warning restore 612, 618
        }
    }
}
