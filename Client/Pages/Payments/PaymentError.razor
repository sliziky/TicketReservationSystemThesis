@page "/payment/{Id:int}/cancel"
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Newtonsoft.Json
@if (Deleted)
{
    <div class="payment__error">
        <h3>Payment Error</h3>
        <h3>You either canceled the reservation or didn't make payment in time</h3>
        <h3>Create new reservation if you wish to buy tickets again</h3>
        <Icon Name="@("fas fa-exclamation-circle fa-10x")" Class="payment__error-icon" />
    </div>
}
else
{
    <LoadingCircle />
}
@code {
    [Parameter]
    public int Id { get; set; }
    public bool Deleted { get; set; } = false;
    public Reservation Reservation { get; set; }
    public TicketReservationSystem.Shared.Domain.Payment Payment { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var parameters = uri.Query.Split("=");
        var sessionId = parameters.Count() >= 1 ? parameters[1] : null;
        Payment = await Http.GetFromJsonAsync<TicketReservationSystem.Shared.Domain.Payment>("api/payments/" + Id);
        if (Payment.SessionId == sessionId)
        {
            await Http.DeleteAsync("api/reservations/" + Payment.Reservation.ReservationId);
            Deleted = true;
            StateHasChanged();
        }
    }
}
