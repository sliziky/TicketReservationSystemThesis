@page "/cinema/new"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime
@using System.ComponentModel.DataAnnotations;
<Authorized>
    <CinemaForm Model="CinemaModel" CallBack="HandleValidSubmit" ButtonText="Add new cinema" Disabled="ProcessingMovie" Title="Add Cinema" />
    @if (ProcessingMovie)
    {
        <LoadingCircle />
    }
    <Alert Class="alert__success" Visible="@(Submitted && (int)Response.StatusCode == 200)" Style="margin-top: 10px;">
        <AlertMessage>Movie was added</AlertMessage>
    </Alert>
    <Alert Color="Color.Danger" Visible="@(Submitted && (int)Response.StatusCode != 200)" Style="margin-top: 10px;">
        <AlertMessage>Error occured during movie adding</AlertMessage>
    </Alert>
</Authorized>
    @code {
        private HttpResponseMessage Response = new HttpResponseMessage();
        public bool Submitted { get; set; } = false;
        public Cinema CinemaModel = new Cinema();
        public bool ProcessingMovie { get; set; } = false;

        public async Task HandleValidSubmit(EditContext context)
        {
            ProcessingMovie = true;
            StateHasChanged();
            Response = await Http.PostAsJsonAsync<Cinema>("/api/cinemas", CinemaModel);
            Submitted = true;
            ProcessingMovie = false;
            StateHasChanged();
        }
    }
